'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.default = function (component, _ref) {
  var store = _ref.store;
  var _ref$init = _ref.init;
  var init = _ref$init === undefined ? [] : _ref$init;
  var renderTarget = _ref.renderTarget;

  if (!renderTarget) {
    var div = document.createElement('div');
    div.id = 'app';
    document.body.appendChild(div);
    renderTarget = document.getElementById('app');
  }
  (0, _reactDom.render)(_react2.default.createElement(
    Root,
    { store: store, init: init },
    component
  ), renderTarget);
};

var _reactRedux = require('react-redux');

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactDom = require('react-dom');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Root = function (_React$Component) {
  _inherits(Root, _React$Component);

  function Root() {
    _classCallCheck(this, Root);

    return _possibleConstructorReturn(this, Object.getPrototypeOf(Root).apply(this, arguments));
  }

  _createClass(Root, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _props = this.props;
      var store = _props.store;
      var init = _props.init;

      init.forEach(function (action) {
        return store.dispatch(action());
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props;
      var store = _props2.store;
      var children = _props2.children;

      return _react2.default.createElement(
        _reactRedux.Provider,
        { store: store },
        children
      );
    }
  }]);

  return Root;
}(_react2.default.Component);